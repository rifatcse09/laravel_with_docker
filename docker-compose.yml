version: '3'

services:
  nginx:
    image: nginx:stable-alpine
    container_name: ${APP_NAME}_nginx
    ports:
    - "8000:80"
    links:
      - php
    volumes:
      - ./:/var/www/html
      - ./docker/nginx/site.conf:/etc/nginx/conf.d/default.conf:rw
      - ./docker/logs/nginx:/var/logs/nginx:rw
    depends_on:
      - php
      - postgresql
    networks:
      - webapp
  php:
    build:
      context: .
      dockerfile: Dockerfile.${APP_ENV}
    container_name: ${APP_NAME}_php
    environment:
      - APP_ENV=${APP_ENV}
    volumes:
      - ./:/var/www/html
    ports:
      - "9001:9000"
    networks:
      - webapp
  npm:
    image: node:16
    container_name: ${APP_NAME}_npm
    user: "1000:1000"
    volumes:
      - ./:/var/www/html
    working_dir: /var/www/html
    entrypoint: ['npm']
    command: ["install"]

  # #Mysql DB
  # mysql:
  #   image: mysql:8.0
  #   container_name: db
  #   restart: unless-stopped
  #   tty: true
  #   ports:
  #       - "33061:3306"
  #   environment:
  #       MYSQL_USER: laravel
  #       MYSQL_PASSWORD: laravel
  #       MYSQL_ROOT_PASSWORD: secret
  #       MYSQL_DATABASE: laravel
  #   command: --default-authentication-plugin=mysql_native_password
  #   volumes:
  #     - ./mysql:/var/lib/mysql
  #   networks:
  #     - webapp

  postgresql:
    image: "postgres:14"
    container_name: db_container
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      TZ: ${DB_TIMEZONE}
    volumes:
      - ./docker/postgres/data:/data/postgres
    ports:
      - "${DB_PORT}:5432"
    networks:
      - webapp

  redis:
    image: redis:4.0
    container_name: ${APP_NAME}_redis
    ports:
      - "6378:6379"
    networks:
      - webapp

  # composer:
  #   container_name: composer_container
  #   image: composer:latest
  #   command: ["composer","install"]    
  #   depends_on: 
  #     - php
  #   volumes:
  #     - ./:/app
  #   restart: always    
     

volumes:
  postgres:
    driver: local

networks:
  webapp: 
    driver: bridge   

